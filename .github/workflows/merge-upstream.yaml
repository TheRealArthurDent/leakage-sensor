name: Merge upstream

on:
  repository_dispatch:
    types: push_main
  workflow_dispatch:

jobs:
  merge-upstream:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        upstream_repo: ['TheRealArthurDent/esp8266-mqtt-client']
    steps:
      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@v2.1.0
        with:
          app_id: ${{ secrets.PR_CREATOR_APP_ID }}
          private_key: ${{ secrets.PR_CREATOR_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4.1.4
        with:
          fetch-depth: 0
          token: ${{ steps.generate-token.outputs.token }}

      - name: Configure git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "<>"

      - name: Create branch
        run: |
          git checkout -b merge-upstream --

      - name: Add remote
        run: |
          git remote add upstream https://${{ steps.generate-token.outputs.token }}:x-oauth-basic@github.com/${{ matrix.upstream_repo }}.git
          git remote set-url origin https://${{ steps.generate-token.outputs.token }}:x-oauth-basic@github.com/TheRealArthurDent/leakage-sensor.git

      - name: Set github url and credentials
        run: |
          /usr/bin/git config --global --add url."https://${{ steps.generate-token.outputs.token }}:x-oauth-basic@github".insteadOf ssh://git@github
          /usr/bin/git config --global --add url."https://${{ steps.generate-token.outputs.token }}:x-oauth-basic@github".insteadOf https://github
          /usr/bin/git config --global --add url."https://${{ steps.generate-token.outputs.token }}:x-oauth-basic@github".insteadOf git@github

      - name: Fetch upstream
        run: |
          git fetch upstream
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: Merge upstream
        id: merge
        run: |
          #!/bin/bash

          if ! mergeResult=$(git merge upstream/main); then
            echo Merge failed. Most likely there have been conflicts.
            exit 1
          fi

          echo ${mergeResult}

          if [ "${mergeResult}" == "Already up to date." ]; then
            echo No diff, no action required. Skipping the following steps.
            echo "skip=true" >> "$GITHUB_OUTPUT"
          else
            git remote remove upstream
            git push --set-upstream origin +merge-upstream -v
          fi
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: Create Pull Request
        if: ${{ !steps.merge.outputs.skip }}
        id: create-pr
        run: |
          echo Creating pull request.
          pr_number=$(curl -s -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ steps.generate-token.outputs.token }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/pulls \
            -d '{"title":"Merge from upstream","head":"merge-upstream","base":"main"}' | jq .number)

          echo Created pull request #$pr_number. Adding reviewers.
          curl -s -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ steps.generate-token.outputs.token }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/pulls/$pr_number/requested_reviewers \
            -d '{"reviewers":["TheRealArthurDent","LunaticGardener"]}'

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
