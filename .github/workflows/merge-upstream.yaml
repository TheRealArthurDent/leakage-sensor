name: Merge upstream

on:
  repository_dispatch:
    types: push_main
  workflow_dispatch:

jobs:
  merge-upstream:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        upstream_repo: ['TheRealArthurDent/esp8266-ota-capable']
    steps:
      - name: Setup SSH Keys and known_hosts
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.SSH_DEPLOY_KEY }}"

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "<>"

      - name: Create branch
        run: |
          git checkout -b merge-upstream main^0 --

      - name: Add remote
        run: |
          git remote add upstream git@github.com:${{ matrix.upstream_repo }}.git

      - name: Fetch upstream
        run: |
          git fetch upstream
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock

      - name: Merge and potentially create PR
        run: |
          #!/bin/bash
          
          #git merge upstream/main
          
          if ! mergeResult=$(git merge upstream/main); then
            echo Merge failed. Most likely there have been conflicts.
            exit 1
          fi

          echo ${mergeResult}

          if [ "${mergeResult}" == "Already up to date." ]; then
            echo No diff, no action required.
          else
            git remote remove upstream
            git push --set-upstream origin +merge-upstream -v
            if [ "$(gh pr list --search merge-upstream --json number)" == "[]" ]; then
              gh pr create --title "Merge from upstream" --fill --reviewer TheRealArthurDent,LunaticGardener
            else
              echo PR already existed and has been updated.
            fi
          fi
            
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
